#include <iostream>

int main() {

    /*Finite element/mesh properties*/
    int index [6][3] ={{32, 33, 10},{68, 57, 59},{32,10,30},{18, 32, 30}, {18, 27, 32}, {32, 27, 33}};
    double x [340] = {
            0,
            1000000,
            1000000,
            0,
            500000,
            500000,
            1000000,
            500000,
            0,
            750000,
            250000,
            250000,
            750000,
            1000000,
            750000,
            625000,
            875000,
            750000,
            625000,
            562500,
            625000,
            687500,
            687500,
            718750,
            875000,
            792968.750000000,
            687500,
            750651.041666667,
            812500,
            784376.263618469,
            812500,
            737044.202801001,
            711415.448691604,
            619808.978986451,
            679903.161929179,
            875000,
            816565.053856185,
            790340.658710220,
            879033.533175235,
            820390.621091832,
            759468.978235531,
            1000000,
            702320.859841237,
            894268.507783234,
            743370.576796310,
            756140.790512273,
            870143.855161857,
            1000000,
            941365.256898506,
            927759.201980660,
            835259.331488833,
            1000000,
            683743.629930992,
            843782.666256379,
            943774.600065196,
            728886.909665418,
            703008.755645616,
            617381.751215996,
            725024.938230651,
            815309.937908477,
            864434.020585503,
            923153.025027661,
            839208.757312344,
            790417.279561013,
            811985.486355676,
            904485.575728738,
            1000000,
            764145.244195216,
            1000000,
            803825.282076934,
            805004.835578925,
            1000000,
            897809.806887819,
            856709.279105734,
            849378.441743033,
            880439.029239758,
            874923.011255883,
            926298.648559902,
            850818.892620893,
            773165.127301366,
            821586.232658331,
            750000,
            838262.904107836,
            843656.199633899,
            1000000,
            923364.600828418,
            1000000,
            947000.539276775,
            951408.706745817,
            1000000,
            941348.213105191,
            955296.623298732,
            908023.579826124,
            562500,
            250000};


    double y [340] ={
            0,
            0,
            1000000,
            1000000,
            500000,
            0,
            500000,
            1000000,
            500000,
            750000,
            250000,
            750000,
            500000,
            750000,
            1000000,
            875000,
            875000,
            875000,
            1000000,
            937500,
            937500,
            906250,
            1000000,
            953125,
            1000000,
            937500,
            828125,
            920572.916666667,
            878051.757812500,
            812500,
            1000000,
            827170.229598665,
            783194.858953284,
            763264.436415277,
            707543.970384571,
            721951.292765993,
            754091.694576727,
            637221.802289097,
            798475.646382997,
            691856.089182386,
            689783.037585673,
            625000,
            620870.454272569,
            615640.570971634,
            644980.879727048,
            576238.434660323,
            666169.589426641,
            687500,
            718750,
            662653.984674518,
            829478.442687945,
            875000,
            543703.292405313,
            530812.600194239,
            784862.850613341,
            540067.128767888,
            500834.557145198,
            488117.171484196,
            417114.765637913,
            583137.430732130,
            575959.282041874,
            521802.973642971,
            626976.867174556,
            535111.031317107,
            469465.031731825,
            758765.612157634,
            812500,
            450532.368377860,
            250000,
            364474.056510873,
            417194.983206486,
            375000,
            431402.060776739,
            389664.513287689,
            437988.852718607,
            485024.675082994,
            283320.547085351,
            362242.641274107,
            333923.922386104,
            265892.281912439,
            288956.910724743,
            0,
            191587.334276942,
            242623.964946808,
            125000,
            213744.023445687,
            437500,
            466364.654790040,
            411369.191325801,
            312500,
            281250,
            325736.339865092,
            317956.142509457,
            1000000,
            1000000,
            818704.703280432,
            835140.579381524,
            801559.478142519,
            853763.548114967,
            889585.369028082,
            939760.831401039,
            872436.659726449,
            734134.396607179
    };
    const int nbv =340;
    const int nbe = 614;

/*Manage Derivatives once for all*/
    double one = 1;
    int k = 0;
    int n1;
    int n2;
    int n3;
    double x1;
    double x2;
    double x3;
    double y1;
    double y2;
    double y3;
    double invdet;
    double alpha [6][3];
    double beta [6][3];
    double areas [6];
    double areasAll[18][2];

    for (int i = 0; i < 6; i++) {
        n1 = index[i][0];

        n2 = index[i][1];

        n3 = index[i][2];
       /* printf("%d\n",n3);*/

        x1 = x[n1-1];
        x2 = x[n2-1];
        x3 = x[n3-1];

        y1 = y[n1-1];
        y2 = y[n2-1];
        y3 = y[n3-1];

        invdet = one/(x1*(y2-y3)-x2*(y1-y3)+x3*(y1-y2));

        alpha[i][0] = invdet*(y2-y3);
        alpha[i][1] = invdet*(y2-y3);
        alpha[i][2] =invdet*(y1-y2);

        beta[i][0] = invdet*(x3-x2);
        beta[i][1] = invdet*(x1-x3);
        beta[i][2] = invdet*(x2-x1);

        areas[i] = (0.5*((x2-x1)*(y3-y1)-(y2-y1)*(x3-x1)));




        areasAll[k][0] = {(0.5*((x2-x1)*(y3-y1)-(y2-y1)*(x3-x1)))};
        areasAll[k+1][0] = {(0.5*((x2-x1)*(y3-y1)-(y2-y1)*(x3-x1)))};
        areasAll[k+2][0] = {(0.5*((x2-x1)*(y3-y1)-(y2-y1)*(x3-x1)))};

        areasAll[k][1] = n1;
        areasAll[k+1][1] = n2;
        areasAll[k+2][1] = n3;

        k = k+3;


    }

   /* for (int g = 0; g < 18; g++) {
        for (int h = 0; h<2; h++) {
            printf("%f\n", areasAll[g][h]);
        }
    } */

double Weights ;
double NodalWeights [18][2];
int nodes [18];
double n;

for (int i = 0; i < 18; i++) {
    double n = areasAll[i][1];
    /*printf("%f\n", n);*/

    for (int l = 0; l < i; l++) {
        if (n == nodes[l]) {
            goto LOOP;
        }

    }

    for (int j = 0; j < 18; j++) {
            if (areasAll[j][1] == n) {
                Weights = Weights + areasAll[j][0];
                printf("%f\n", areasAll[j][0]);
            }
        }

        nodes[i] = n;
        NodalWeights [i][0] = n;
        printf("%f\n", NodalWeights[i][0]);
        NodalWeights [i][1] = Weights;
        printf("%f\n", NodalWeights[i][1]);
        Weights = 0;
        LOOP:;
}
    return 0;
}
